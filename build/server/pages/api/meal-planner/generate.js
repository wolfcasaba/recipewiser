"use strict";(()=>{var e={};e.id=201,e.ids=[201],e.modules={5600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},7984:e=>{e.exports=import("openai")},6762:(e,t)=>{Object.defineProperty(t,"M",{enumerable:!0,get:function(){return function e(t,n){return n in t?t[n]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,n)):"function"==typeof t&&"default"===n?t:void 0}}})},4509:(e,t,n)=>{n.a(e,async(e,a)=>{try{n.r(t),n.d(t,{config:()=>d,default:()=>u,routeModule:()=>c});var r=n(9947),o=n(2706),i=n(6762),s=n(2776),l=e([s]);s=(l.then?(await l)():l)[0];let u=(0,i.M)(s,"default"),d=(0,i.M)(s,"config"),c=new r.PagesAPIRouteModule({definition:{kind:o.A.PAGES_API,page:"/api/meal-planner/generate",pathname:"/api/meal-planner/generate",bundlePath:"",filename:""},userland:s});a()}catch(e){a(e)}})},2776:(e,t,n)=>{n.a(e,async(e,a)=>{try{n.r(t),n.d(t,{default:()=>i});var r=n(7984),o=e([r]);let s=new(r=(o.then?(await o)():o)[0]).default({apiKey:process.env.OPENAI_API_KEY});async function i(e,t){if("POST"!==e.method)return t.status(405).json({message:"Method Not Allowed"});let{dietaryPreference:n}=e.body,a=`Suggest a 7-day meal plan for someone who follows a ${n} diet. List breakfast, lunch, and dinner for each day.`;try{let e=await s.completions.create({model:"text-davinci-003",prompt:a,max_tokens:300});t.status(200).json({plan:e.choices[0].text})}catch(e){console.error("OpenAI API error:",e),t.status(500).json({error:"Failed to generate meal plan"})}}a()}catch(e){a(e)}})},2706:(e,t)=>{Object.defineProperty(t,"A",{enumerable:!0,get:function(){return n}});var n=function(e){return e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE",e}({})},9947:(e,t,n)=>{e.exports=n(5600)}};var t=require("../../../webpack-api-runtime.js");t.C(e);var n=t(t.s=4509);module.exports=n})();